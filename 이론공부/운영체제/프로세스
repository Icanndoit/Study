Q1. 프로세스란?
컴퓨터의 프로그램은 평상시 보조기억장치에 머물러 있는다. 프로그램이 동작하려면 보조기억장치에서 메모리 위에 적재가 되어야 하는데,
이때 메모리에 적재된 프로그램을 "프로세스(Process)"라고 한다.

Q2. 프로세스의 상태를 설명하시오.
생성 상태 : 프로세스가 생성된 상태
준비 상태 : 프로세스가 실행을 기다리는 상태
실행 상태 : 프로세스가 실행되고 있는 상태
대기 상태 : 프로세스가 입출력 작업을 요청했을때, 입출력장치가 입출력 작업을 끝낼때까지 기다리는 상태
종료 상태 : 프로세스가 종료된 상태

Q3. 프로세스 제어 블록(PCB)이란 ?
운영체제가 여러 프로세스를 관리하기 위한 자료구조로, 하나의 프로세스마다 하나의 PCB가 생성된다.
운영체제는 빠르게 번갈아 수행되는 프로세스의 실행 순서를 관리하고, 프로세스에 CPU를 비롯한 자원을 배분하게 되는데, 이를 위해 운영체제는
"프로세스 제어 블록(PCB, Process Control Block)"을 이용한다.
다음은 PCB에 저장되는 정보들이다
Process ID : 프로세스를 구분하는 ID로, 학교의 학번/회사의 사번과 같은 존재
Process State(프로세스 상태) : 프로세스의 현재 상태를 나타낸다.
Program Counter : 프로세스가 다음에 실행할 명령어의 주소를 저장한다.
Register : 해당 프로세스가 실행될 때 사용하는 모든 레지스터 값이 담긴다.(후술할 Context Switching을 위해서 반드시 필요)
Pointer : 프로세스의 현재 위치를 저장한다

Q4. 포그라운드 프로세스 vs 백그라운드 프로세스
포그라운드 프로세스(Foreground Process) : 사용자가 볼 수 있는 공간에서 실행되는 프로세스
백그라운드 프로세스(Background Process) : 사용자가 보이지 않는 공간에서 실행되는 프로세스

백그라운드 프로세스 중에서는 사용자와 직접 상호작용 할 수 있는 프로세스도 존재하지만, 사용자와 상호작용하지 않는 프로세스들도 있다.
이때 사용자와 상호작용하지 않는 백그라운드 프로세스를 유닉스(리눅스) 에서는 "데몬(Daemon)"이라고 부르고, 윈도우에서는 "서비스(Service)"라고 부른다.

Q5. 문맥 교환(Context Switching)에 대해 설명하시오.
보통 하나의 CPU에서는 하나의 프로세스만을 처리한다. 그런데 현재 실행중인 프로세스가 실행시간이 다되거나 하는 등 
갑자기 현재 실행중인 프로세스A를 종료하고 프로세스B를 실행해야 하는 상황이 생긴다.
이처럼 "현재 실행중인 프로세스를 멈추고 다른 프로세스를 실행"하는 개념을 "Context Switching(문맥 교환)"이라고 한다.
문맥 교환은 매우 빠른 속도로 일어나기 때문에 우리 눈에는 컴퓨터가 한번에 여러 프로세스를 실행하는 것처럼 보이게 된다.
